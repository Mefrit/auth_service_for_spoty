{"version":3,"sources":["Play — копия.ts"],"names":[],"mappings":"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","file":"../Play — копия.js","sourcesContent":["import { getParams } from \"./lib/query\";\r\nimport { PlayList } from \"./modules/PlayList\";\r\nimport { AudioPlayer } from \"./modules/AudioPlayer\";\r\n\r\nimport { Api } from \"./modules/Api\";\r\nimport { settings } from \"./settings\";\r\n\r\nclass Play {\r\n    user_info_dom: any;\r\n    songs_dom: any;\r\n    api: any;\r\n    player: any;\r\n    settings: any;\r\n    url_params: any;\r\n    constructor(conf: any) {\r\n        this.user_info_dom = conf.user_info_dom;\r\n        this.songs_dom = conf.songs;\r\n        this.api = conf.api;\r\n        this.player = conf.player;\r\n        this.settings = conf.settings;\r\n        this.url_params = conf.url_params;\r\n    }\r\n    playMusic = (ev: any) => {\r\n        // ev.preventDefault();\r\n        const song_data = JSON.parse(ev.target.getAttribute(\"data-info-music\"));\r\n        this.player.play(song_data);\r\n    };\r\n    createBackLink() {\r\n        return \"<a href='/'>Назад</a>\";\r\n    }\r\n    async prepareArtistSongs() {\r\n        let url_playlist_elem, playlist;\r\n        const url_artist_songs = `https://api.jamendo.com/v3.0/artists/tracks/?client_id=${this.settings.client_id}&format=jsonpretty&order=track_name_desc&id=${this.url_params.artist_id}`;\r\n        const artists_songs = await this.api.getDataFromApi(url_artist_songs);\r\n        if (artists_songs.result && artists_songs.data.length > 0) {\r\n            artists_songs.data.forEach((element: any) => {\r\n                url_playlist_elem = `https://api.jamendo.com/v3.0/artists/tracks/?client_id=${this.settings.client_id}&format=jsonpretty&limit=40&id=${element.id}&order=track_id`;\r\n                playlist = new PlayList({\r\n                    list: element.tracks,\r\n                    title: element.name,\r\n                    type: \"track\",\r\n                    url: url_playlist_elem,\r\n                });\r\n                this.songs_dom.insertAdjacentHTML(\"beforeend\", playlist.render());\r\n            });\r\n        } else {\r\n            this.songs_dom.insertAdjacentHTML(\"beforeend\", `<h4>Список доступной музыки пуст</h4>`);\r\n        }\r\n    }\r\n    async prepareLoverSongs() {\r\n        let url_playlist_elem, playlist;\r\n        const access_token = localStorage.getItem(\"access_token\");\r\n        const id_user = localStorage.getItem(\"id_user\");\r\n        const url_playlist = `https://api.jamendo.com/v3.0/playlists/tracks/?client_id=${this.settings.client_id}&format=jsonpretty&user_id=${id_user}\r\n                &access_token=${access_token}`;\r\n        const favorite = await this.api.getDataFromApi(url_playlist);\r\n\r\n        if (favorite.result) {\r\n            favorite.data.forEach((element: any) => {\r\n                url_playlist_elem = `https://api.jamendo.com/v3.0/playlists/tracks/?client_id=${this.settings.client_id}&format=jsonpretty&limit=40&id=${element.id}`;\r\n                playlist = new PlayList({\r\n                    list: element.tracks,\r\n                    title: element.name,\r\n                    type: \"track\",\r\n                    url: url_playlist_elem,\r\n                });\r\n                this.songs_dom.insertAdjacentHTML(\"beforeend\", playlist.render());\r\n            });\r\n        } else {\r\n            alert(favorite.message.headers.error_message);\r\n            this.songs_dom.insertAdjacentHTML(\r\n                \"beforeend\",\r\n                `<h4>Авторизуйтесь, для получения списка ваших плейлистов.</h4>`\r\n            );\r\n        }\r\n    }\r\n    async prepareSongs() {\r\n        const songs = await this.api.loadPlayList(this.url_params.play_list_id, this.settings.client_id);\r\n        const url_playlist = `https://api.jamendo.com/v3.0/playlists/tracks/?client_id=${this.settings.client_id}&format=jsonpretty&limit=40&id=${this.url_params.play_list_id}`;\r\n        if (songs.result && songs.data.length > 0) {\r\n            let playlist = new PlayList({\r\n                list: songs.data[0].tracks,\r\n                title: songs.data[0].name,\r\n                type: \"track\",\r\n                url: url_playlist,\r\n            });\r\n            this.songs_dom.insertAdjacentHTML(\"beforeend\", playlist.render());\r\n        } else {\r\n            this.songs_dom.insertAdjacentHTML(\"beforeend\", `<h4>Список доступной музыки пуст</h4>`);\r\n        }\r\n    }\r\n    setRegistrationLink() {\r\n        const link = document.getElementById(\"registration__link\");\r\n        link?.setAttribute(\r\n            \"href\",\r\n            `https://api.jamendo.com/v3.0/oauth/authorize?client_id=${this.settings.client_id}&redirect_uri=http://localhost:4567/&response_type=code`\r\n        );\r\n    }\r\n    initPlaySongEvents() {\r\n        // вынести\r\n        const plays_btn: any = document.getElementsByClassName(\"play-btn\");\r\n        if (plays_btn) {\r\n            for (var i = 0; i < plays_btn.length; i++) {\r\n                plays_btn[i].addEventListener(\"click\", this.playMusic);\r\n            }\r\n        }\r\n    }\r\n    async init() {\r\n        // вход\r\n        console.log(\"init\");\r\n\r\n        this.setRegistrationLink();\r\n        if (this.songs_dom) {\r\n            if (this.url_params.mode === \"lovesongs\") {\r\n                await this.prepareLoverSongs();\r\n            } else {\r\n                if (this.url_params.mode === \"artist\") {\r\n                    await this.prepareArtistSongs();\r\n\r\n                    //   const songs = await this.api.loadPlayList(this.url_params.play_list_id, this.settings.client_id);\r\n                } else {\r\n                    await this.prepareSongs();\r\n                }\r\n            }\r\n        }\r\n        this.initPlaySongEvents();\r\n    }\r\n    async start() {\r\n        this.init();\r\n    }\r\n}\r\n\r\nconst user_info_dom = document.getElementById(\"user-info\");\r\nconst songs = document.getElementById(\"songs\");\r\nconst audio_player = document.getElementById(\"audio-player\");\r\nconst song_info_player = document.getElementById(\"song-info-player\");\r\n\r\nconst play_pause = document.getElementById(\"play-pause\");\r\nconst play_back = document.getElementById(\"play-back\");\r\nconst play_forward = document.getElementById(\"play-forward\");\r\nconst play_progress = document.getElementById(\"play-progress\");\r\nconst play_sound_mute = document.getElementById(\"play-sound-mute\");\r\nconst play_volume = document.getElementById(\"play-volume\");\r\nconst play_time_start = document.getElementById(\"play-time-start\");\r\nconst play_time_end = document.getElementById(\"play-time-end\");\r\nconst play_svg_path = document.getElementById(\"play_svg_path\");\r\nconst url_params = getParams(window.location);\r\n\r\nconst Api_object = new Api();\r\nconst player = new AudioPlayer({\r\n    audio_player: audio_player,\r\n    api: Api_object,\r\n    settings: settings,\r\n    song_info_player: song_info_player,\r\n    play_pause: play_pause,\r\n    play_back: play_back,\r\n    play_forward: play_forward,\r\n    play_progress: play_progress,\r\n    play_volume: play_volume,\r\n    play_sound_mute: play_sound_mute,\r\n    time_start: play_time_start,\r\n    time_end: play_time_end,\r\n    play_svg_path: play_svg_path,\r\n});\r\nconst main = new Play({\r\n    user_info_dom: user_info_dom,\r\n    songs: songs,\r\n    api: Api_object,\r\n    player: player,\r\n    settings: settings,\r\n    song_info_player: song_info_player,\r\n    url_params: url_params,\r\n});\r\nmain.start();\r\n"]}