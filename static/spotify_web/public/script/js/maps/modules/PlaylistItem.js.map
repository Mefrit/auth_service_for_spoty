{"version":3,"sources":["modules/PlaylistItem.tsx"],"names":[],"mappings":"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","file":"../../modules/PlaylistItem.js","sourcesContent":["import { playListPropsInterface, PlayListItemJumendoInterface } from \"../interfaces/PlayListInterface\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function PlayListItem(props: playListPropsInterface) {\r\n    function getImageHref(item: PlayListItemJumendoInterface) {\r\n        let href = \"./static/spotify_web/public/images/album.jpg\";\r\n\r\n        if (item.image) {\r\n            href = item.image;\r\n        }\r\n        if (item.album_image) {\r\n            href = item.album_image;\r\n        } else {\r\n            if (item.albumImage)\r\n                href = item.albumImage;\r\n        }\r\n        return href;\r\n    }\r\n    function getTitleItem(item: PlayListItemJumendoInterface, type: string) {\r\n        let title = \"Не известно\";\r\n\r\n        if (item.name) {\r\n            title = item.name;\r\n        }\r\n        if (item.albumName && type !== \"track\") {\r\n            title = item.albumName;\r\n        }\r\n        return title;\r\n    }\r\n    function getDescription(item: PlayListItemJumendoInterface) {\r\n        let description = \"\";\r\n        if (item.musicinfo) {\r\n            description += \"Жанры: \" + item.musicinfo.tags.genres.join(\" \") + \".\";\r\n            description += \"\\nИнструменты \" + item.musicinfo.tags.instruments.join(\" \") + \".\";\r\n        }\r\n        if (item.releasedate) {\r\n            description += \"\\nДата релиза \" + item.releasedate + \".\";\r\n        } else if (item.creationdate) {\r\n            description += \"\\nДата релиза \" + item.creationdate + \".\";\r\n        }\r\n\r\n        if (item.artist_name) {\r\n            description += \"\\n \" + item.artist_name + \".\";\r\n        }\r\n        return description;\r\n    }\r\n    function getParamsByType(props: playListPropsInterface) {\r\n        const params: { id: number, isPlaylist: boolean, isArtistlist: boolean } = {\r\n            id: props.item.id,\r\n            isPlaylist: props.type === \"playlist\",\r\n            isArtistlist: props.type === \"artist\"\r\n        };\r\n\r\n        return encodeQueryData(params);\r\n    }\r\n    function encodeQueryData(data: { id: number, isPlaylist: boolean, isArtistlist: boolean }) {\r\n        const ret = [];\r\n        for (let key in data)\r\n            ret.push(encodeURIComponent(key) + '=' + encodeURIComponent(data[key]));\r\n        return ret.join('&');\r\n    }\r\n\r\n    const choseSonglist = (item: PlayListItemJumendoInterface) => {\r\n        props.setSong(item)\r\n    }\r\n    return <div className=\"album-container__song-container\">\r\n        <div className={props.type === \"track\" ? \" album_column\" : \"album\"} >\r\n            <div className={props.type === \"track\" ? \" album_column__image-container\" : \"album__image\"}>\r\n                <img src={getImageHref(props.item)} alt=\"icon\" className=\"album__image\" />\r\n                {\r\n                    props.type === \"track\" ? <ButtonPlay type={props.type} item={props.item} choseSonglist={choseSonglist} /> :\r\n                        <Link to={\"/play?\" + getParamsByType(props)}>\r\n                            <ButtonPlay type={props.type} choseSonglist={choseSonglist} />\r\n                        </Link>\r\n                }\r\n            </div>\r\n            <h5 className=\"album__title\">{getTitleItem(props.item, props.type)}</h5>\r\n            <p className=\"album__description\">{getDescription(props.item)}</p>\r\n        </div>\r\n    </div>\r\n}\r\nfunction ButtonPlay(props: { type: string, choseSonglist: (item: PlayListItemJumendoInterface) => void }) {\r\n    return <button className={props.type === \"track\" ? \" play-btn\" : \"play-btn play-btn_album\"} onClick={() => { props.choseSonglist(props.item) }}>\r\n        <svg\r\n            className=\"play-btn__image play-btn__image_album\"\r\n            role=\"img\"\r\n            height=\"16\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n\r\n            data-info-music='${inf_for_player}'\r\n        >\r\n            <path\r\n                data-info-music='${inf_for_player}'\r\n                d=\"M3 1.713a.7.7 0 011.05-.607l10.89 6.288a.7.7 0 010 1.212L4.05 14.894A.7.7 0 013 14.288V1.713z\"\r\n            ></path>\r\n        </svg>\r\n    </button>\r\n}"]}