{"version":3,"sources":["modules/Api.ts"],"names":[],"mappings":";;;;IACA;QAAA;QA6BA,CAAC;QA5BG,sBAAQ,GAAR,UAAS,OAAe,EAAE,SAAiB;YAA3C,iBAOC;YANG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAM,GAAG,GAAG,yDAAkD,SAAS,6DAAmD,OAAO,CAAE,CAAC;gBACpI,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;oBACtC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,0BAAY,GAAZ,UAAa,YAAoB,EAAE,SAAiB;YAApD,iBAQC;YAPG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAE/B,IAAM,GAAG,GAAG,mEAA4D,SAAS,4CAAkC,YAAY,CAAE,CAAC;gBAClI,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAW;oBACtC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,4BAAc,GAAd,UAAe,GAAW;YACtB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAA,eAAO,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAAS;oBACxB,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;wBACnC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;qBACjD;yBAAM;wBACH,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC7C;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACL,UAAC;IAAD,CA7BA,AA6BC,IAAA;IA7BY,kBAAG","file":"../../modules/Api.js","sourcesContent":["import { getJSON } from \"../lib/query\";\r\nexport class Api {\r\n    loadSong(song_id: string, client_id: string) {\r\n        return new Promise((resolve, reject) => {\r\n            const url = `https://api.jamendo.com/v3.0/tracks/?client_id=${client_id}&format=jsonpretty&limit=5&include=musicinfo&id=${song_id}`;\r\n            this.getDataFromApi(url).then((answer: any) => {\r\n                resolve(answer);\r\n            });\r\n        });\r\n    }\r\n    loadPlayList(play_list_id: string, client_id: string) {\r\n        return new Promise((resolve, reject) => {\r\n            // https://api.jamendo.com/v3.0/playlists/tracks/?client_id=your_client_id&format=jsonpretty&limit=2&name=Instrumental&track_type=albumtrack\r\n            const url = `https://api.jamendo.com/v3.0/playlists/tracks/?client_id=${client_id}&format=jsonpretty&limit=40&id=${play_list_id}`;\r\n            this.getDataFromApi(url).then((answer: any) => {\r\n                resolve(answer);\r\n            });\r\n        });\r\n    }\r\n    getDataFromApi(url: string) {\r\n        return new Promise((resolve, reject) => {\r\n            getJSON(url).then((data: any) => {\r\n                if (data.headers.status === \"success\") {\r\n                    resolve({ result: true, data: data.results });\r\n                } else {\r\n                    resolve({ result: false, message: data });\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}