{"version":3,"sources":["modules/Api.ts"],"names":[],"mappings":";;;;IAGA;QAAA;QA4BA,CAAC;QA3BG,sBAAQ,GAAR,UAAS,MAAc,EAAE,QAAgB;YAAzC,iBAOC;YANG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAM,GAAG,GAAG,yDAAkD,QAAQ,6DAAmD,MAAM,CAAE,CAAC;gBAClI,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACjC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,0BAAY,GAAZ,UAAa,UAAkB,EAAE,QAAgB;YAAjD,iBAOC;YANG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAM,GAAG,GAAG,mEAA4D,QAAQ,4CAAkC,UAAU,CAAE,CAAC;gBAC/H,KAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;oBACjC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACD,4BAAc,GAAd,UAAe,GAAW;YACtB,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAC/B,IAAA,eAAO,EAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAC,IAA2B;oBAC1C,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;wBACnC,OAAO,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;qBACjD;yBAAM;wBACH,OAAO,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;qBAC7C;gBACL,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACP,CAAC;QACL,UAAC;IAAD,CA5BA,AA4BC,IAAA;IA5BY,kBAAG","file":"../../modules/Api.js","sourcesContent":["import { getJSON } from \"../lib/query\";\r\nimport { DefaultJumendoRequest } from \"../interfaces/DefaultInterface\";\r\nimport { ApiInterface } from \"../interfaces/ApiInterface\";\r\nexport class Api implements ApiInterface {\r\n    loadSong(songId: string, clientId: string) {\r\n        return new Promise((resolve, reject) => {\r\n            const url = `https://api.jamendo.com/v3.0/tracks/?client_id=${clientId}&format=jsonpretty&limit=5&include=musicinfo&id=${songId}`;\r\n            this.getDataFromApi(url).then((answer) => {\r\n                resolve(answer);\r\n            });\r\n        });\r\n    }\r\n    loadPlayList(playListId: string, clientId: string) {\r\n        return new Promise((resolve, reject) => {\r\n            const url = `https://api.jamendo.com/v3.0/playlists/tracks/?client_id=${clientId}&format=jsonpretty&limit=40&id=${playListId}`;\r\n            this.getDataFromApi(url).then((answer) => {\r\n                resolve(answer);\r\n            });\r\n        });\r\n    }\r\n    getDataFromApi(url: string) {\r\n        return new Promise((resolve, reject) => {\r\n            getJSON(url).then((data: DefaultJumendoRequest) => {\r\n                if (data.headers.status === \"success\") {\r\n                    resolve({ result: true, data: data.results });\r\n                } else {\r\n                    resolve({ result: false, message: data });\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n"]}