{"version":3,"sources":["modules/AudioPlayer.ts"],"names":[],"mappings":"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","file":"../../modules/AudioPlayer.js","sourcesContent":["import { SongInfoPlayer } from \"./SongInfoPlayer\";\r\nimport { SettingsInterface, DefaultRequest, SongData, DefaultJumendoRequest } from \"../interfaces/DefaultInterface\";\r\nimport { ApiInterface } from \"../interfaces/ApiInterface\";\r\nimport { AudioPlayerInterface } from \"../interfaces/AudioPlayerInterface\";\r\nimport { SongInfoInterface } from \"../interfaces/SongInfoInterface\";\r\nexport class AudioPlayer {\r\n    domAudioPlayer: HTMLAudioElement;\r\n    Api: ApiInterface;\r\n    songInfoPlayer: HTMLElement;\r\n    settings: SettingsInterface;\r\n    playBack: HTMLElement;\r\n    playForward: HTMLElement;\r\n    playProgress: HTMLInputElement;\r\n    playVolume: HTMLElement;\r\n    playSoundMute: HTMLElement;\r\n    playPause: HTMLElement;\r\n    isPlayed: boolean;\r\n    curent_song_index: number;\r\n    curent_api_url: string;\r\n    playTimeStart: HTMLElement;\r\n    playSvgPath: HTMLElement;\r\n    playTimeEnd: HTMLElement;\r\n    curent_volume: number;\r\n    constructor(conf: AudioPlayerInterface) {\r\n        this.isPlayed = false;\r\n        this.domAudioPlayer = conf.audioPlayer;\r\n        this.curent_volume = 50;\r\n        this.curent_song_index = 0;\r\n        this.curent_api_url = \"\";\r\n\r\n        this.Api = conf.api;\r\n        this.settings = conf.settings;\r\n        this.songInfoPlayer = conf.songInfoPlayer;\r\n        this.playBack = conf.playBack;\r\n        this.playForward = conf.playForward;\r\n        this.playProgress = conf.playProgress;\r\n        this.playVolume = conf.playVolume;\r\n        this.playPause = conf.playPause;\r\n        this.playSoundMute = conf.playSoundMute;\r\n        this.playTimeStart = conf.timeStart;\r\n        this.playTimeEnd = conf.timeEnd;\r\n        this.playSvgPath = conf.playSvgPath;\r\n        this.initEvents();\r\n    }\r\n    getTimeFromSecunds(sec: number) {\r\n        const full_minutes = Math.round(sec / 60);\r\n        const secunds = Math.abs(Math.round(sec - full_minutes * 60));\r\n        return (\"0\" + full_minutes).slice(-2) + \":\" + (\"0\" + secunds).slice(-2);\r\n    }\r\n    timeupdate = () => {\r\n        const currentTime = this.domAudioPlayer.currentTime;\r\n        const duration = this.domAudioPlayer.duration;\r\n        this.playTimeStart.innerHTML = this.getTimeFromSecunds(currentTime + 0.25);\r\n        this.playTimeEnd.innerHTML = this.getTimeFromSecunds(duration);\r\n        this.playProgress.value = Math.round(((currentTime + 0.25) / duration) * 100).toString();\r\n    };\r\n    changePlayProgress = (ev: Event) => {\r\n        if (ev.target) {\r\n            const new_part = (ev.target as HTMLInputElement).value;\r\n            const duration = this.domAudioPlayer.duration;\r\n            this.domAudioPlayer.currentTime = Math.round((duration / 100) * Number(new_part));\r\n        }\r\n    };\r\n    muteSound = () => {\r\n        if (this.domAudioPlayer.volume === 0) {\r\n            this.domAudioPlayer.volume = this.curent_volume / 100;\r\n        } else {\r\n            this.domAudioPlayer.volume = 0;\r\n        }\r\n    };\r\n    playPauseSong = () => {\r\n        if (this.isPlayed) {\r\n            this.playSvgPath.setAttribute(\r\n                \"d\",\r\n                \"M3 1.713a.7.7 0 011.05-.607l10.89 6.288a.7.7 0 010 1.212L4.05 14.894A.7.7 0 013 14.288V1.713z\"\r\n            );\r\n            this.domAudioPlayer.pause();\r\n        } else {\r\n            this.playSvgPath.setAttribute(\"d\", \"M0,0 0,16 5,16 5,0z M 15,0 15,16 10,16 10,0z\");\r\n            this.domAudioPlayer.play();\r\n        }\r\n        this.isPlayed = !this.isPlayed;\r\n    };\r\n    playForwardEvent = () => {\r\n        this.domAudioPlayer.pause();\r\n        if (this.curent_api_url)\r\n            this.Api.getDataFromApi(this.curent_api_url).then((answer: DefaultRequest) => {\r\n                if (answer.result) {\r\n                    const start_tracks = answer.data[0].tracks ? answer.data[0].tracks : answer.data;\r\n                    const track = start_tracks.filter((elem: { audio: string }) => {\r\n                        return elem.audio !== \"\";\r\n                    });\r\n                    if (track.length > 0) {\r\n                        if (this.curent_song_index + 1 >= track.length) {\r\n                            this.curent_song_index = 0;\r\n                        } else {\r\n                            this.curent_song_index++;\r\n                        }\r\n                        this.playSong(track[this.curent_song_index]);\r\n                    }\r\n                }\r\n            });\r\n        this.isPlayed = !this.isPlayed;\r\n    };\r\n    playBackEvent = () => {\r\n        this.domAudioPlayer.pause();\r\n        if (this.curent_api_url)\r\n            this.Api.getDataFromApi(this.curent_api_url).then((answer: DefaultRequest) => {\r\n                if (answer.result) {\r\n                    const start_tracks = answer.data[0].tracks ? answer.data[0].tracks : answer.data;\r\n                    if (start_tracks.length > 0) {\r\n                        if (this.curent_song_index - 1 < 0) {\r\n                            this.curent_song_index = start_tracks.length - 1;\r\n                        } else {\r\n                            this.curent_song_index--;\r\n                        }\r\n                        this.playSong(start_tracks[this.curent_song_index]);\r\n                    }\r\n                }\r\n            });\r\n        this.isPlayed = !this.isPlayed;\r\n    };\r\n    initEvents() {\r\n        this.domAudioPlayer.addEventListener(\"timeupdate\", this.timeupdate);\r\n        this.playProgress.addEventListener(\"change\", this.changePlayProgress);\r\n        this.playSoundMute.addEventListener(\"click\", this.muteSound);\r\n        this.playVolume.addEventListener(\"change\", (ev: Event) => {\r\n            if (ev.target) {\r\n                const value = (ev.target as HTMLInputElement).value;\r\n                this.curent_volume = Number(value);\r\n                this.domAudioPlayer.volume = Number(value) / 100;\r\n            }\r\n        });\r\n        this.playPause.addEventListener(\"click\", this.playPauseSong);\r\n        this.playForward.addEventListener(\"click\", this.playForwardEvent);\r\n        this.playBack.addEventListener(\"click\", this.playBackEvent);\r\n    }\r\n    playSong(data: SongInfoInterface) {\r\n        this.songInfoPlayer.innerHTML = \"\";\r\n        if (data.audio) {\r\n            this.domAudioPlayer.setAttribute(\"src\", data.audio);\r\n        }\r\n        this.domAudioPlayer.play();\r\n        this.isPlayed = true;\r\n        const song_info = new SongInfoPlayer(data);\r\n        this.songInfoPlayer.insertAdjacentHTML(\"beforeend\", song_info.render());\r\n    }\r\n    loadArtistSong(artist_id: string) {\r\n        const params = new URLSearchParams({\r\n            artist_id: artist_id,\r\n            mode: \"artist\",\r\n        });\r\n        document.location.href = \"play?\" + params.toString();\r\n    }\r\n    loadPlayList(playListId: string) {\r\n        const params = new URLSearchParams({\r\n            playListId: playListId,\r\n            mode: \"playlist\",\r\n        });\r\n        document.location.href = \"play?\" + params.toString();\r\n    }\r\n    loadAlbumSong(album_id: string) {\r\n        const params = new URLSearchParams({\r\n            album_id: album_id,\r\n            mode: \"album\",\r\n        });\r\n        document.location.href = \"play?\" + params.toString();\r\n    }\r\n    async play(data: SongData) {\r\n        let answer;\r\n        if (data) {\r\n            this.curent_api_url = data.url;\r\n            this.curent_song_index = data.index;\r\n            if (data.isPlaylist) {\r\n                await this.loadPlayList(data.id);\r\n            }\r\n            if (data.isArtist) {\r\n                await this.loadArtistSong(data.id);\r\n            }\r\n            if (data.isAlbum) {\r\n                await this.loadAlbumSong(data.id);\r\n            }\r\n            answer = await this.Api.loadSong(data.id, this.settings.CLIENT_ID);\r\n\r\n            if (answer.result && answer.data.length > 0) {\r\n                this.playSvgPath.setAttribute(\"d\", \"M0,0 0,16 5,16 5,0z M 15,0 15,16 10,16 10,0z\");\r\n                this.playSong(answer.data[0]);\r\n            } else {\r\n                this.domAudioPlayer.pause();\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}